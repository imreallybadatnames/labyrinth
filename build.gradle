plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url = "https://maven.nucleoid.xyz" }
    maven { url = "https://maven.is-immensely.gay/releases" }
}

dependencies {
    minecraft ("com.mojang:minecraft:${project.minecraft_version}")
    mappings ("net.fabricmc:yarn:${project.yarn_mappings}:v2")
    modImplementation ("net.fabricmc:fabric-loader:${project.loader_version}")

    // fapi
    modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    // polymer
    modImplementation include("xyz.nucleoid:server-translations-api:${project.server_translations_api_version}")
    modImplementation include("eu.pb4:sgui:${project.sgui_version}")
    modImplementation include("eu.pb4:polymer-core:${project.polymer_version}")
    modImplementation include("eu.pb4:polymer-resource-pack:${project.polymer_version}")
    modImplementation include("eu.pb4:polymer-virtual-entity:${project.polymer_version}")
    modImplementation include("eu.pb4:polymer-networking:${project.polymer_version}")
    //NexusFrame
    modImplementation ("dev.mayaqq:NexusFrame:${project.nexusframe_version}")
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
               "minecraft_version": project.minecraft_version,
               "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}